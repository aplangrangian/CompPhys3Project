
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Oct 29 13:39:52 2020
@author: romankosarzycki
"""

#Imports
import numpy as np
from scipy.misc import derivative


#Functions
def func(q):
    return (1+q)**(-2)

def qfunc(x):
    return (1+x)/(1-x)

def weight_func(Mesh_Size):
    X = np.polynomial.legendre.leggauss(Mesh_Size)
    return X

def GaussInteg(X,N,K):
    sum=0
    for j in range(0,N):
        q=qfunc(X[j])
        sum+= K[j]*func(q)*derivative(qfunc,X[j], dx=1e-6)
        print(sum)
    return sum

#Variables
N=40
F=np.zeros((N,1))

#Body of Code    
Mesh_asbsesca = weight_func(N)[0]
Mesh_weights = weight_func(N)[1]

F=GaussInteg(Mesh_asbsesca,N,Mesh_weights)
