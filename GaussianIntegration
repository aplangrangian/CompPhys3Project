#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Oct 29 13:39:52 2020

@author: romankosarzycki
"""

import numpy as np

def func(k,q):
    func=k*np.exp(-q**2)
    return func

def GaussInteg(i,N,q0,K,k):
    x=-1+i*(2/N)
    q=q0*(1+x)/(1-x)
    qderiv=2*q0/(-1+x)**2
    sum=0
    for j in range(0,N):
        sum+= K[i][j]*func(k,q)
        print(func(k,q))
    return sum

def GaussInteg2(func,N,q0):
    Q=np.zeros((N,1))
    QDERIV=np.zeros((N,1))
    for i in range(0,N):
        x=-1+i*(2/N)
        q=q0*(1+x)/(1-x)
        qderiv=2*q0/(-1+x)**2
        Q[i-1]=q
        QDERIV[i-1]=qderiv
    sum=0
    return Q,QDERIV

N=10
K=np.identity(N)
k=0
F=np.zeros((N,1))
q0=1

for i in range(0,N):
    k+=1
    F[i]=GaussInteg(i,N,q0,K,k)
