#imports
import numpy as np
from matplotlib import pyplot as plt
from mpl_toolkits import mplot3d

def U(N,n):#n to indicate I or III
    U=np.zeros((N,N))
    mesh=updatedmesh(N)
    w=mesh[1]
    q=mesh[0]
    r=mesh[0]
    for i,j in zip(range(N),range(N)):
        if q[i]!=0 and q[j]!=0:
            sum=0
            for l in range(N):
                sum+=w[l]*np.sin(q[i]*r[l])/q[i]*Vi(r[l],n)*np.sin(q[j]*r[l])/q[j]
            U[i,j]=sum
        if q[i]==0 or q[j]==0:
            sum=0
            for l in range(N):
                sum+=w[l]*r[l]*np.sin(q[i]*r[l])/q[i]*Vi(r[l],n)
            U[i,j]=sum  
        if q[i]==0 and q[j]==0:
            sum=0
            for l in range(N):
                sum+=w[l]*r[l]^2*Vi(r[l],n)
            U[i,j]=sum
    return U

def Uij(N,n,qi,qj):
    mesh=updatedmesh(N)
    w=mesh[1]
#   q=mesh[0]
    r=mesh[0]
    if qi!=0 and qj!=0:
        sum=0
        for l in range(N):
            sum+=w[l]*np.sin(q[i]*r[l])/q[i]*Vi(r[l],n)*np.sin(q[j]*r[l])/q[j]
        Uij=sum
    if qi==0 or qj==0:
        sum=0
        for l in range(N):
            sum+=w[l]*r[l]*np.sin(q[i]*r[l])/q[i]*Vi(r[l],n)
        Uij=sum  
    if q[i]==0 and q[j]==0:
        sum=0
        for l in range(N):
            sum+=w[l]*r[l]^2*Vi(r[l],n)
        Uij=sum
    return Uij
p=updatedmesh(N)[0]
q=updatedmesh(N)[0]
P,Q = np.meshgrid(p,q)
Ui=Uij(N,1,P,Q)
Uiii=Uij(N,3,P,Q)

fig=plt.figure()
ax=plt.axes(projection='3d')
ax.plot_wireframe(P,Q,Ui,color='green')
ax.plot_wireframe(P,Q,Uiii,color='red')
plt.show()
